<head>
  <title>Polaris</title>
  <link rel="icon" type="image/x-icon" href="../app-assets/polaris.png">
  <link rel="stylesheet" href="../app-assets/tailwind.css">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <script src="https://unpkg.com/@popperjs/core@2.10.1/dist/umd/popper.min.js"></script>

  <!-- Meta-->
  <meta name="title" content="Polaris">
  <meta name="description" content="The interconnected and seamless platform for free hosting, cloud and AI.">
  <meta name="keywords" content="polarisnode, polaris, free hosting, hosting, cloud servers, ai">
  <meta name="robots" content="index, follow">
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <meta name="language" content="English">
  <meta name="author" content="SRYDEN, Inc.">
</head>

<body class="bg-gray-100">
  <%- include('./components/navigation-home') %>
  <%
    function formatBytes(bytes, decimals = 2) {
        if (bytes === 0) return '0 Bytes';
    
        const k = 1024;
        const dm = decimals < 0 ? 0 : decimals;
        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
    
        const i = Math.floor(Math.log(bytes) / Math.log(k));
    
        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
    }
  %>
  <div class="md:pl-48 flex flex-col flex-1">
    <main class="flex-1 pb-32">
      <div class="py-6">
        <!-- Skeleton loader -->
        <%- include('./components/skeleton') %>
        <div class="hidden max-w-7xl pt-8 mx-auto px-4 sm:px-6 md:px-8" id="content">
          <div>
            <div class="lg:flex lg:items-center lg:justify-between rounded-3xl mb-8">
              <div class="min-w-0 flex-1">
                <div class="flex">
                  <div class="relative">
                    <div class="bg-gray-200 rounded-2xl h-11 w-11 text-center flex text-gray-400">
                      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-5 h-5 mt-3 ml-3">
                        <path d="M4.08 5.227A3 3 0 0 1 6.979 3H17.02a3 3 0 0 1 2.9 2.227l2.113 7.926A5.228 5.228 0 0 0 18.75 12H5.25a5.228 5.228 0 0 0-3.284 1.153L4.08 5.227Z" />
                        <path fill-rule="evenodd" d="M5.25 13.5a3.75 3.75 0 1 0 0 7.5h13.5a3.75 3.75 0 1 0 0-7.5H5.25Zm10.5 4.5a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Zm3.75-.75a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Z" clip-rule="evenodd" />
                      </svg>
                    </div>
                  </div>
                  <div class="relative ml-4">
                    <h2 class="text-xl font-semibold text-gray-700 sm:truncate tracking-tight">Instances</h2>
                    <p class="text-xs font-thin text-gray-500">View and manage your instances on Skyport.</p>
                  </div>
                </div>
              </div>
              <div class="mt-5 flex lg:ml-4 lg:mt-0">
                <span class="sm:ml-3 mr-3">
                  <button type="button" id="createApiKeyButton" class="transition inline-flex items-center rounded-2xl bg-gray-200 px-8 py-2 text-sm font-medium text-gray-600 hover:bg-gray-300 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-gray-600">
                    Refresh
                  </button>
                </span>
              </div>
            </div>
          </div>
          <div class="">
            <div class="mt-5 flex flex-col">
              <div class="-my-2 -mx-4 overflow-x-auto sm:-mx-6 lg:-mx-8">
                <div class="inline-block min-w-full py-2 align-middle md:px-6 lg:px-8">
                  <div class="overflow-hidden shadow-sm border border-gray-200 md:rounded-3xl">
                    <table id="apiKeysTable" class="min-w-full divide-y divide-gray-200">
                      <thead class="bg-gray-50">
                        <tr>
                          <th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-700 sm:pl-6">Name</th>
                          <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-700">ID</th>
                          <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-700">Status</th>
                        </tr>
                      </thead>
                      <tbody class="bg-white">
                        <% for(let i = 0; i < srvs.length; i++) { %>
                        <% let srvC = srvs[i].server %>
                        <% let srvCR = srvs[i].resources %>
                        <tr class="cursor-pointer hover:bg-gray-100 transition" onclick="location.href = '/server/<%= srvC.attributes.identifier %>'">
                          <td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-700 sm:pl-6"><%= srvC.attributes.name %></td>
                          <td class="whitespace-nowrap py-4 pl-3 text-sm font-medium text-gray-700"><%= srvC.attributes.identifier %></td>
                          <% if(srvCR.current_state == "offline") { %>
                            <td class="whitespace-nowrap py-4 text-sm font-medium text-red-400 pl-2">
                              <span class="bg-red-100/50 py-1 px-4 rounded-full">Powered off</span>
                            </td>
                          <% }else if(srvCR.current_state == "starting") { %>
                          <td><i class="fa fa-circle font-small-3 text-warning mr-50"></i>Starting</td>
                          <% }else if(srvCR.current_state == "running") { %>
                          <td><i class="fa fa-circle font-small-3 text-success mr-50"></i>Online</td>
                          <% } %>
                        </tr>
                        <% } %>
                      </tbody>
                    </table>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
    </main>
  </div>
  </div>
</body>